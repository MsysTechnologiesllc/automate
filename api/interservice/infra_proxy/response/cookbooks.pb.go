// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/interservice/infra_proxy/response/cookbooks.proto

package response

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Cookbooks struct {
	Cookbooks            []*CookbookVersion `protobuf:"bytes,1,rep,name=cookbooks,proto3" json:"cookbooks,omitempty" toml:"cookbooks,omitempty" mapstructure:"cookbooks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte             `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32              `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Cookbooks) Reset()         { *m = Cookbooks{} }
func (m *Cookbooks) String() string { return proto.CompactTextString(m) }
func (*Cookbooks) ProtoMessage()    {}
func (*Cookbooks) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f90db7200f6126e, []int{0}
}

func (m *Cookbooks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cookbooks.Unmarshal(m, b)
}
func (m *Cookbooks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cookbooks.Marshal(b, m, deterministic)
}
func (m *Cookbooks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cookbooks.Merge(m, src)
}
func (m *Cookbooks) XXX_Size() int {
	return xxx_messageInfo_Cookbooks.Size(m)
}
func (m *Cookbooks) XXX_DiscardUnknown() {
	xxx_messageInfo_Cookbooks.DiscardUnknown(m)
}

var xxx_messageInfo_Cookbooks proto.InternalMessageInfo

func (m *Cookbooks) GetCookbooks() []*CookbookVersion {
	if m != nil {
		return m.Cookbooks
	}
	return nil
}

type CookbooksAvailableVersions struct {
	Cookbooks            []*CookbookAllVersion `protobuf:"bytes,1,rep,name=cookbooks,proto3" json:"cookbooks,omitempty" toml:"cookbooks,omitempty" mapstructure:"cookbooks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte                `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32                 `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CookbooksAvailableVersions) Reset()         { *m = CookbooksAvailableVersions{} }
func (m *CookbooksAvailableVersions) String() string { return proto.CompactTextString(m) }
func (*CookbooksAvailableVersions) ProtoMessage()    {}
func (*CookbooksAvailableVersions) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f90db7200f6126e, []int{1}
}

func (m *CookbooksAvailableVersions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CookbooksAvailableVersions.Unmarshal(m, b)
}
func (m *CookbooksAvailableVersions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CookbooksAvailableVersions.Marshal(b, m, deterministic)
}
func (m *CookbooksAvailableVersions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CookbooksAvailableVersions.Merge(m, src)
}
func (m *CookbooksAvailableVersions) XXX_Size() int {
	return xxx_messageInfo_CookbooksAvailableVersions.Size(m)
}
func (m *CookbooksAvailableVersions) XXX_DiscardUnknown() {
	xxx_messageInfo_CookbooksAvailableVersions.DiscardUnknown(m)
}

var xxx_messageInfo_CookbooksAvailableVersions proto.InternalMessageInfo

func (m *CookbooksAvailableVersions) GetCookbooks() []*CookbookAllVersion {
	if m != nil {
		return m.Cookbooks
	}
	return nil
}

type CookbookVersion struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" mapstructure:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CookbookVersion) Reset()         { *m = CookbookVersion{} }
func (m *CookbookVersion) String() string { return proto.CompactTextString(m) }
func (*CookbookVersion) ProtoMessage()    {}
func (*CookbookVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f90db7200f6126e, []int{2}
}

func (m *CookbookVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CookbookVersion.Unmarshal(m, b)
}
func (m *CookbookVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CookbookVersion.Marshal(b, m, deterministic)
}
func (m *CookbookVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CookbookVersion.Merge(m, src)
}
func (m *CookbookVersion) XXX_Size() int {
	return xxx_messageInfo_CookbookVersion.Size(m)
}
func (m *CookbookVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_CookbookVersion.DiscardUnknown(m)
}

var xxx_messageInfo_CookbookVersion proto.InternalMessageInfo

func (m *CookbookVersion) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CookbookVersion) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type Cookbook struct {
	CookbookName         string          `protobuf:"bytes,1,opt,name=cookbook_name,json=cookbookName,proto3" json:"cookbook_name,omitempty" toml:"cookbook_name,omitempty" mapstructure:"cookbook_name,omitempty"`
	Name                 string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Version              string          `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" mapstructure:"version,omitempty"`
	ChefType             string          `protobuf:"bytes,4,opt,name=chef_type,json=chefType,proto3" json:"chef_type,omitempty" toml:"chef_type,omitempty" mapstructure:"chef_type,omitempty"`
	Frozen               bool            `protobuf:"varint,5,opt,name=frozen,proto3" json:"frozen,omitempty" toml:"frozen,omitempty" mapstructure:"frozen,omitempty"`
	JsonClass            string          `protobuf:"bytes,6,opt,name=json_class,json=jsonClass,proto3" json:"json_class,omitempty" toml:"json_class,omitempty" mapstructure:"json_class,omitempty"`
	Files                []*CookbookItem `protobuf:"bytes,7,rep,name=files,proto3" json:"files,omitempty" toml:"files,omitempty" mapstructure:"files,omitempty"`
	Templates            []*CookbookItem `protobuf:"bytes,8,rep,name=templates,proto3" json:"templates,omitempty" toml:"templates,omitempty" mapstructure:"templates,omitempty"`
	Attributes           []*CookbookItem `protobuf:"bytes,9,rep,name=attributes,proto3" json:"attributes,omitempty" toml:"attributes,omitempty" mapstructure:"attributes,omitempty"`
	Recipes              []*CookbookItem `protobuf:"bytes,10,rep,name=recipes,proto3" json:"recipes,omitempty" toml:"recipes,omitempty" mapstructure:"recipes,omitempty"`
	Definitions          []*CookbookItem `protobuf:"bytes,11,rep,name=definitions,proto3" json:"definitions,omitempty" toml:"definitions,omitempty" mapstructure:"definitions,omitempty"`
	Libraries            []*CookbookItem `protobuf:"bytes,12,rep,name=libraries,proto3" json:"libraries,omitempty" toml:"libraries,omitempty" mapstructure:"libraries,omitempty"`
	Providers            []*CookbookItem `protobuf:"bytes,13,rep,name=providers,proto3" json:"providers,omitempty" toml:"providers,omitempty" mapstructure:"providers,omitempty"`
	Resources            []*CookbookItem `protobuf:"bytes,14,rep,name=resources,proto3" json:"resources,omitempty" toml:"resources,omitempty" mapstructure:"resources,omitempty"`
	RootFiles            []*CookbookItem `protobuf:"bytes,15,rep,name=root_files,json=rootFiles,proto3" json:"root_files,omitempty" toml:"root_files,omitempty" mapstructure:"root_files,omitempty"`
	Metadata             *CookbookMeta   `protobuf:"bytes,16,opt,name=metadata,proto3" json:"metadata,omitempty" toml:"metadata,omitempty" mapstructure:"metadata,omitempty"`
	Access               *CookbookAccess `protobuf:"bytes,17,opt,name=access,proto3" json:"access,omitempty" toml:"access,omitempty" mapstructure:"access,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte          `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32           `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Cookbook) Reset()         { *m = Cookbook{} }
func (m *Cookbook) String() string { return proto.CompactTextString(m) }
func (*Cookbook) ProtoMessage()    {}
func (*Cookbook) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f90db7200f6126e, []int{3}
}

func (m *Cookbook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cookbook.Unmarshal(m, b)
}
func (m *Cookbook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cookbook.Marshal(b, m, deterministic)
}
func (m *Cookbook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cookbook.Merge(m, src)
}
func (m *Cookbook) XXX_Size() int {
	return xxx_messageInfo_Cookbook.Size(m)
}
func (m *Cookbook) XXX_DiscardUnknown() {
	xxx_messageInfo_Cookbook.DiscardUnknown(m)
}

var xxx_messageInfo_Cookbook proto.InternalMessageInfo

func (m *Cookbook) GetCookbookName() string {
	if m != nil {
		return m.CookbookName
	}
	return ""
}

func (m *Cookbook) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Cookbook) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Cookbook) GetChefType() string {
	if m != nil {
		return m.ChefType
	}
	return ""
}

func (m *Cookbook) GetFrozen() bool {
	if m != nil {
		return m.Frozen
	}
	return false
}

func (m *Cookbook) GetJsonClass() string {
	if m != nil {
		return m.JsonClass
	}
	return ""
}

func (m *Cookbook) GetFiles() []*CookbookItem {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *Cookbook) GetTemplates() []*CookbookItem {
	if m != nil {
		return m.Templates
	}
	return nil
}

func (m *Cookbook) GetAttributes() []*CookbookItem {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Cookbook) GetRecipes() []*CookbookItem {
	if m != nil {
		return m.Recipes
	}
	return nil
}

func (m *Cookbook) GetDefinitions() []*CookbookItem {
	if m != nil {
		return m.Definitions
	}
	return nil
}

func (m *Cookbook) GetLibraries() []*CookbookItem {
	if m != nil {
		return m.Libraries
	}
	return nil
}

func (m *Cookbook) GetProviders() []*CookbookItem {
	if m != nil {
		return m.Providers
	}
	return nil
}

func (m *Cookbook) GetResources() []*CookbookItem {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Cookbook) GetRootFiles() []*CookbookItem {
	if m != nil {
		return m.RootFiles
	}
	return nil
}

func (m *Cookbook) GetMetadata() *CookbookMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Cookbook) GetAccess() *CookbookAccess {
	if m != nil {
		return m.Access
	}
	return nil
}

type CookbookItem struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty" toml:"url,omitempty" mapstructure:"url,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty" toml:"path,omitempty" mapstructure:"path,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Checksum             string   `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty" toml:"checksum,omitempty" mapstructure:"checksum,omitempty"`
	Specificity          string   `protobuf:"bytes,5,opt,name=specificity,proto3" json:"specificity,omitempty" toml:"specificity,omitempty" mapstructure:"specificity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CookbookItem) Reset()         { *m = CookbookItem{} }
func (m *CookbookItem) String() string { return proto.CompactTextString(m) }
func (*CookbookItem) ProtoMessage()    {}
func (*CookbookItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f90db7200f6126e, []int{4}
}

func (m *CookbookItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CookbookItem.Unmarshal(m, b)
}
func (m *CookbookItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CookbookItem.Marshal(b, m, deterministic)
}
func (m *CookbookItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CookbookItem.Merge(m, src)
}
func (m *CookbookItem) XXX_Size() int {
	return xxx_messageInfo_CookbookItem.Size(m)
}
func (m *CookbookItem) XXX_DiscardUnknown() {
	xxx_messageInfo_CookbookItem.DiscardUnknown(m)
}

var xxx_messageInfo_CookbookItem proto.InternalMessageInfo

func (m *CookbookItem) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *CookbookItem) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CookbookItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CookbookItem) GetChecksum() string {
	if m != nil {
		return m.Checksum
	}
	return ""
}

func (m *CookbookItem) GetSpecificity() string {
	if m != nil {
		return m.Specificity
	}
	return ""
}

type CookbookMeta struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" mapstructure:"version,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty" toml:"description,omitempty" mapstructure:"description,omitempty"`
	LongDescription      string   `protobuf:"bytes,4,opt,name=long_description,json=longDescription,proto3" json:"long_description,omitempty" toml:"long_description,omitempty" mapstructure:"long_description,omitempty"`
	Maintainer           string   `protobuf:"bytes,5,opt,name=maintainer,proto3" json:"maintainer,omitempty" toml:"maintainer,omitempty" mapstructure:"maintainer,omitempty"`
	MaintainerEmail      string   `protobuf:"bytes,6,opt,name=maintainer_email,json=maintainerEmail,proto3" json:"maintainer_email,omitempty" toml:"maintainer_email,omitempty" mapstructure:"maintainer_email,omitempty"`
	License              string   `protobuf:"bytes,7,opt,name=license,proto3" json:"license,omitempty" toml:"license,omitempty" mapstructure:"license,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CookbookMeta) Reset()         { *m = CookbookMeta{} }
func (m *CookbookMeta) String() string { return proto.CompactTextString(m) }
func (*CookbookMeta) ProtoMessage()    {}
func (*CookbookMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f90db7200f6126e, []int{5}
}

func (m *CookbookMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CookbookMeta.Unmarshal(m, b)
}
func (m *CookbookMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CookbookMeta.Marshal(b, m, deterministic)
}
func (m *CookbookMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CookbookMeta.Merge(m, src)
}
func (m *CookbookMeta) XXX_Size() int {
	return xxx_messageInfo_CookbookMeta.Size(m)
}
func (m *CookbookMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_CookbookMeta.DiscardUnknown(m)
}

var xxx_messageInfo_CookbookMeta proto.InternalMessageInfo

func (m *CookbookMeta) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CookbookMeta) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *CookbookMeta) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CookbookMeta) GetLongDescription() string {
	if m != nil {
		return m.LongDescription
	}
	return ""
}

func (m *CookbookMeta) GetMaintainer() string {
	if m != nil {
		return m.Maintainer
	}
	return ""
}

func (m *CookbookMeta) GetMaintainerEmail() string {
	if m != nil {
		return m.MaintainerEmail
	}
	return ""
}

func (m *CookbookMeta) GetLicense() string {
	if m != nil {
		return m.License
	}
	return ""
}

type CookbookAccess struct {
	Read                 bool     `protobuf:"varint,1,opt,name=read,proto3" json:"read,omitempty" toml:"read,omitempty" mapstructure:"read,omitempty"`
	Create               bool     `protobuf:"varint,2,opt,name=create,proto3" json:"create,omitempty" toml:"create,omitempty" mapstructure:"create,omitempty"`
	Grant                bool     `protobuf:"varint,3,opt,name=grant,proto3" json:"grant,omitempty" toml:"grant,omitempty" mapstructure:"grant,omitempty"`
	Update               bool     `protobuf:"varint,4,opt,name=update,proto3" json:"update,omitempty" toml:"update,omitempty" mapstructure:"update,omitempty"`
	Delete               bool     `protobuf:"varint,5,opt,name=delete,proto3" json:"delete,omitempty" toml:"delete,omitempty" mapstructure:"delete,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CookbookAccess) Reset()         { *m = CookbookAccess{} }
func (m *CookbookAccess) String() string { return proto.CompactTextString(m) }
func (*CookbookAccess) ProtoMessage()    {}
func (*CookbookAccess) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f90db7200f6126e, []int{6}
}

func (m *CookbookAccess) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CookbookAccess.Unmarshal(m, b)
}
func (m *CookbookAccess) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CookbookAccess.Marshal(b, m, deterministic)
}
func (m *CookbookAccess) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CookbookAccess.Merge(m, src)
}
func (m *CookbookAccess) XXX_Size() int {
	return xxx_messageInfo_CookbookAccess.Size(m)
}
func (m *CookbookAccess) XXX_DiscardUnknown() {
	xxx_messageInfo_CookbookAccess.DiscardUnknown(m)
}

var xxx_messageInfo_CookbookAccess proto.InternalMessageInfo

func (m *CookbookAccess) GetRead() bool {
	if m != nil {
		return m.Read
	}
	return false
}

func (m *CookbookAccess) GetCreate() bool {
	if m != nil {
		return m.Create
	}
	return false
}

func (m *CookbookAccess) GetGrant() bool {
	if m != nil {
		return m.Grant
	}
	return false
}

func (m *CookbookAccess) GetUpdate() bool {
	if m != nil {
		return m.Update
	}
	return false
}

func (m *CookbookAccess) GetDelete() bool {
	if m != nil {
		return m.Delete
	}
	return false
}

type CookbookAllVersion struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	CurrentVersion       string   `protobuf:"bytes,2,opt,name=current_version,json=currentVersion,proto3" json:"current_version,omitempty" toml:"current_version,omitempty" mapstructure:"current_version,omitempty"`
	Versions             []string `protobuf:"bytes,3,rep,name=versions,proto3" json:"versions,omitempty" toml:"versions,omitempty" mapstructure:"versions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CookbookAllVersion) Reset()         { *m = CookbookAllVersion{} }
func (m *CookbookAllVersion) String() string { return proto.CompactTextString(m) }
func (*CookbookAllVersion) ProtoMessage()    {}
func (*CookbookAllVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f90db7200f6126e, []int{7}
}

func (m *CookbookAllVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CookbookAllVersion.Unmarshal(m, b)
}
func (m *CookbookAllVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CookbookAllVersion.Marshal(b, m, deterministic)
}
func (m *CookbookAllVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CookbookAllVersion.Merge(m, src)
}
func (m *CookbookAllVersion) XXX_Size() int {
	return xxx_messageInfo_CookbookAllVersion.Size(m)
}
func (m *CookbookAllVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_CookbookAllVersion.DiscardUnknown(m)
}

var xxx_messageInfo_CookbookAllVersion proto.InternalMessageInfo

func (m *CookbookAllVersion) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CookbookAllVersion) GetCurrentVersion() string {
	if m != nil {
		return m.CurrentVersion
	}
	return ""
}

func (m *CookbookAllVersion) GetVersions() []string {
	if m != nil {
		return m.Versions
	}
	return nil
}

func init() {
	proto.RegisterType((*Cookbooks)(nil), "chef.automate.domain.infra_proxy.response.Cookbooks")
	proto.RegisterType((*CookbooksAvailableVersions)(nil), "chef.automate.domain.infra_proxy.response.CookbooksAvailableVersions")
	proto.RegisterType((*CookbookVersion)(nil), "chef.automate.domain.infra_proxy.response.CookbookVersion")
	proto.RegisterType((*Cookbook)(nil), "chef.automate.domain.infra_proxy.response.Cookbook")
	proto.RegisterType((*CookbookItem)(nil), "chef.automate.domain.infra_proxy.response.CookbookItem")
	proto.RegisterType((*CookbookMeta)(nil), "chef.automate.domain.infra_proxy.response.CookbookMeta")
	proto.RegisterType((*CookbookAccess)(nil), "chef.automate.domain.infra_proxy.response.CookbookAccess")
	proto.RegisterType((*CookbookAllVersion)(nil), "chef.automate.domain.infra_proxy.response.CookbookAllVersion")
}

func init() {
	proto.RegisterFile("api/interservice/infra_proxy/response/cookbooks.proto", fileDescriptor_3f90db7200f6126e)
}

var fileDescriptor_3f90db7200f6126e = []byte{
	// 736 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x96, 0x4d, 0x6f, 0xd3, 0x4c,
	0x10, 0xc7, 0x95, 0xa6, 0x4d, 0xec, 0x49, 0xdb, 0xf4, 0x59, 0x3d, 0x7a, 0xb4, 0xea, 0x23, 0x50,
	0x14, 0x0e, 0xb4, 0x17, 0x47, 0x02, 0x21, 0x04, 0x12, 0x2f, 0xa5, 0x80, 0xc4, 0xa1, 0x48, 0x35,
	0x50, 0xde, 0x0e, 0xd6, 0x66, 0x3d, 0x69, 0x97, 0xda, 0x5e, 0x6b, 0x77, 0x1d, 0x11, 0x8e, 0x1c,
	0xf8, 0xa2, 0xdc, 0xf9, 0x0c, 0x68, 0xfd, 0x16, 0x97, 0xf6, 0x50, 0xe2, 0xdb, 0xce, 0xdf, 0xb3,
	0xbf, 0xdd, 0x19, 0x8f, 0xfe, 0x36, 0xdc, 0x63, 0xa9, 0x98, 0x88, 0xc4, 0xa0, 0xd2, 0xa8, 0xe6,
	0x82, 0xe3, 0x44, 0x24, 0x33, 0xc5, 0x82, 0x54, 0xc9, 0xaf, 0x8b, 0x89, 0x42, 0x9d, 0xca, 0x44,
	0xe3, 0x84, 0x4b, 0x79, 0x3e, 0x95, 0xf2, 0x5c, 0x7b, 0xa9, 0x92, 0x46, 0x92, 0x7d, 0x7e, 0x86,
	0x33, 0x8f, 0x65, 0x46, 0xc6, 0xcc, 0xa0, 0x17, 0xca, 0x98, 0x89, 0xc4, 0x6b, 0x6c, 0xf5, 0xaa,
	0xad, 0x63, 0x04, 0xf7, 0xb0, 0xda, 0x4d, 0x3e, 0x80, 0x5b, 0xa3, 0x68, 0x67, 0xd4, 0xdd, 0x1b,
	0xdc, 0x79, 0xe8, 0x5d, 0x9b, 0xe5, 0x55, 0xa0, 0x13, 0x54, 0x5a, 0xc8, 0xc4, 0x5f, 0xc2, 0xc6,
	0x0b, 0xd8, 0xad, 0x8f, 0x39, 0x98, 0x33, 0x11, 0xb1, 0x69, 0x84, 0x65, 0x9e, 0x26, 0x9f, 0x2f,
	0x9f, 0xfb, 0x68, 0x85, 0x73, 0x0f, 0xa2, 0xe8, 0x8a, 0xa3, 0x9f, 0xc0, 0xf0, 0x8f, 0x8b, 0x11,
	0x02, 0xeb, 0x09, 0x8b, 0x91, 0x76, 0x46, 0x9d, 0x3d, 0xd7, 0xcf, 0xd7, 0x84, 0x42, 0x7f, 0x5e,
	0x3c, 0xa6, 0x6b, 0xb9, 0x5c, 0x85, 0xe3, 0x9f, 0x0e, 0x38, 0x15, 0x81, 0xdc, 0x82, 0xad, 0x0a,
	0x1d, 0x34, 0x18, 0x9b, 0x95, 0xf8, 0xda, 0xb2, 0x2a, 0xfe, 0xda, 0xd5, 0xfc, 0xee, 0x05, 0x3e,
	0xf9, 0x1f, 0x5c, 0x5b, 0x6b, 0x60, 0x16, 0x29, 0xd2, 0xf5, 0xfc, 0x99, 0x63, 0x85, 0xb7, 0x8b,
	0x14, 0xc9, 0x7f, 0xd0, 0x9b, 0x29, 0xf9, 0x0d, 0x13, 0xba, 0x31, 0xea, 0xec, 0x39, 0x7e, 0x19,
	0x91, 0x1b, 0x00, 0x5f, 0xb4, 0x4c, 0x02, 0x1e, 0x31, 0xad, 0x69, 0x2f, 0xdf, 0xe5, 0x5a, 0xe5,
	0xd0, 0x0a, 0xe4, 0x08, 0x36, 0x66, 0x22, 0x42, 0x4d, 0xfb, 0x79, 0x37, 0xef, 0xaf, 0xd0, 0xcd,
	0x57, 0x06, 0x63, 0xbf, 0xa0, 0x90, 0x77, 0xe0, 0x1a, 0x8c, 0xd3, 0x88, 0x19, 0xd4, 0xd4, 0x69,
	0x87, 0x5c, 0x92, 0xc8, 0x7b, 0x00, 0x66, 0x8c, 0x12, 0xd3, 0xcc, 0x72, 0xdd, 0x76, 0xdc, 0x06,
	0x8a, 0x1c, 0x43, 0x5f, 0x21, 0x17, 0x29, 0x6a, 0x0a, 0xed, 0xa8, 0x15, 0x87, 0x7c, 0x84, 0x41,
	0x88, 0x33, 0x91, 0x08, 0x63, 0x47, 0x96, 0x0e, 0xda, 0x61, 0x9b, 0x2c, 0xdb, 0xdd, 0x48, 0x4c,
	0x15, 0x53, 0x02, 0x35, 0xdd, 0x6c, 0xd9, 0xdd, 0x9a, 0x64, 0xb1, 0xa9, 0x92, 0x73, 0x11, 0xa2,
	0xd2, 0x74, 0xab, 0x25, 0xb6, 0x26, 0x59, 0xac, 0x42, 0x2d, 0x33, 0xc5, 0x51, 0xd3, 0xed, 0x96,
	0xd8, 0x9a, 0x44, 0x4e, 0x00, 0x94, 0x94, 0x26, 0x28, 0xc6, 0x76, 0xd8, 0x96, 0x2b, 0xa5, 0x79,
	0x99, 0x8f, 0xee, 0x1b, 0x70, 0x62, 0x34, 0x2c, 0x64, 0x86, 0xd1, 0x9d, 0x51, 0x67, 0x45, 0xea,
	0x11, 0x1a, 0xe6, 0xd7, 0x20, 0x72, 0x0c, 0x3d, 0xc6, 0x39, 0x6a, 0x4d, 0xff, 0xc9, 0x91, 0x0f,
	0x56, 0x71, 0xab, 0x1c, 0xe0, 0x97, 0xa0, 0xf1, 0x8f, 0x0e, 0x6c, 0x36, 0x6b, 0x20, 0x3b, 0xd0,
	0xcd, 0x54, 0x54, 0xfa, 0x8b, 0x5d, 0x5a, 0x5b, 0x49, 0x99, 0x39, 0xab, 0x6c, 0xc5, 0xae, 0x6b,
	0xab, 0xe9, 0x36, 0xac, 0x66, 0x17, 0xac, 0x7f, 0xf0, 0x73, 0x9d, 0xc5, 0x0d, 0x3f, 0xc9, 0x63,
	0x32, 0x82, 0x81, 0x4e, 0x91, 0x8b, 0x99, 0xe0, 0xc2, 0x2c, 0x72, 0x53, 0x71, 0xfd, 0xa6, 0x34,
	0xfe, 0xd5, 0xb8, 0x88, 0x2d, 0xfb, 0xef, 0xdc, 0xd2, 0x1e, 0x10, 0xa2, 0xe6, 0x4a, 0xa4, 0x66,
	0xe9, 0x75, 0x4d, 0x89, 0xec, 0xc3, 0x4e, 0x24, 0x93, 0xd3, 0xa0, 0x99, 0x56, 0x5c, 0x73, 0x68,
	0xf5, 0xe7, 0x8d, 0xd4, 0x9b, 0x00, 0xb6, 0x91, 0x86, 0x89, 0x04, 0x55, 0x79, 0xd9, 0x86, 0x62,
	0x51, 0xcb, 0x28, 0xc0, 0x98, 0x89, 0xa8, 0xf4, 0xc2, 0xe1, 0x52, 0x7f, 0x61, 0x65, 0x7b, 0xe3,
	0x48, 0x70, 0x4c, 0x34, 0xd2, 0x7e, 0x71, 0xe3, 0x32, 0x1c, 0x7f, 0xef, 0xc0, 0xf6, 0xc5, 0x97,
	0x62, 0x4b, 0x56, 0xc8, 0xc2, 0xbc, 0x64, 0xc7, 0xcf, 0xd7, 0xd6, 0x89, 0xb9, 0x42, 0x66, 0x0a,
	0x5b, 0x77, 0xfc, 0x32, 0x22, 0xff, 0xc2, 0xc6, 0xa9, 0x62, 0x89, 0xc9, 0x4b, 0x75, 0xfc, 0x22,
	0xb0, 0xd9, 0x59, 0x1a, 0xda, 0xec, 0xf5, 0x22, 0xbb, 0x88, 0xac, 0x1e, 0x62, 0x84, 0x06, 0x2b,
	0x3f, 0x2f, 0xa2, 0x71, 0x0c, 0xe4, 0xf2, 0x67, 0xec, 0xca, 0xd6, 0xdf, 0x86, 0x21, 0xcf, 0x94,
	0xc2, 0xc4, 0x04, 0x17, 0x5f, 0xc1, 0x76, 0x29, 0x57, 0x9b, 0x77, 0xc1, 0x29, 0x13, 0x34, 0xed,
	0x8e, 0xba, 0x76, 0x0c, 0xaa, 0xf8, 0xd9, 0xd3, 0x4f, 0x8f, 0x4f, 0x85, 0x39, 0xcb, 0xa6, 0x1e,
	0x97, 0xf1, 0xc4, 0x0e, 0xef, 0xa4, 0x1a, 0xde, 0xc9, 0xb5, 0xfe, 0x39, 0xa6, 0xbd, 0xfc, 0x57,
	0xe3, 0xee, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x54, 0xc8, 0x29, 0x83, 0xa3, 0x08, 0x00, 0x00,
}
