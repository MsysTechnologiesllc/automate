// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/interservice/infra_proxy/response/cookbooks.proto

package response

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Cookbooks struct {
	Cookbooks            []*CookbookVersion `protobuf:"bytes,1,rep,name=cookbooks,proto3" json:"cookbooks,omitempty" toml:"cookbooks,omitempty" mapstructure:"cookbooks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte             `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32              `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Cookbooks) Reset()         { *m = Cookbooks{} }
func (m *Cookbooks) String() string { return proto.CompactTextString(m) }
func (*Cookbooks) ProtoMessage()    {}
func (*Cookbooks) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f90db7200f6126e, []int{0}
}

func (m *Cookbooks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cookbooks.Unmarshal(m, b)
}
func (m *Cookbooks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cookbooks.Marshal(b, m, deterministic)
}
func (m *Cookbooks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cookbooks.Merge(m, src)
}
func (m *Cookbooks) XXX_Size() int {
	return xxx_messageInfo_Cookbooks.Size(m)
}
func (m *Cookbooks) XXX_DiscardUnknown() {
	xxx_messageInfo_Cookbooks.DiscardUnknown(m)
}

var xxx_messageInfo_Cookbooks proto.InternalMessageInfo

func (m *Cookbooks) GetCookbooks() []*CookbookVersion {
	if m != nil {
		return m.Cookbooks
	}
	return nil
}

type CookbooksAvailableVersions struct {
	Cookbooks            []*CookbookAllVersion `protobuf:"bytes,1,rep,name=cookbooks,proto3" json:"cookbooks,omitempty" toml:"cookbooks,omitempty" mapstructure:"cookbooks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte                `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32                 `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CookbooksAvailableVersions) Reset()         { *m = CookbooksAvailableVersions{} }
func (m *CookbooksAvailableVersions) String() string { return proto.CompactTextString(m) }
func (*CookbooksAvailableVersions) ProtoMessage()    {}
func (*CookbooksAvailableVersions) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f90db7200f6126e, []int{1}
}

func (m *CookbooksAvailableVersions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CookbooksAvailableVersions.Unmarshal(m, b)
}
func (m *CookbooksAvailableVersions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CookbooksAvailableVersions.Marshal(b, m, deterministic)
}
func (m *CookbooksAvailableVersions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CookbooksAvailableVersions.Merge(m, src)
}
func (m *CookbooksAvailableVersions) XXX_Size() int {
	return xxx_messageInfo_CookbooksAvailableVersions.Size(m)
}
func (m *CookbooksAvailableVersions) XXX_DiscardUnknown() {
	xxx_messageInfo_CookbooksAvailableVersions.DiscardUnknown(m)
}

var xxx_messageInfo_CookbooksAvailableVersions proto.InternalMessageInfo

func (m *CookbooksAvailableVersions) GetCookbooks() []*CookbookAllVersion {
	if m != nil {
		return m.Cookbooks
	}
	return nil
}

type CookbookVersion struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" mapstructure:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CookbookVersion) Reset()         { *m = CookbookVersion{} }
func (m *CookbookVersion) String() string { return proto.CompactTextString(m) }
func (*CookbookVersion) ProtoMessage()    {}
func (*CookbookVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f90db7200f6126e, []int{2}
}

func (m *CookbookVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CookbookVersion.Unmarshal(m, b)
}
func (m *CookbookVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CookbookVersion.Marshal(b, m, deterministic)
}
func (m *CookbookVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CookbookVersion.Merge(m, src)
}
func (m *CookbookVersion) XXX_Size() int {
	return xxx_messageInfo_CookbookVersion.Size(m)
}
func (m *CookbookVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_CookbookVersion.DiscardUnknown(m)
}

var xxx_messageInfo_CookbookVersion proto.InternalMessageInfo

func (m *CookbookVersion) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CookbookVersion) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type Cookbook struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" mapstructure:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Cookbook) Reset()         { *m = Cookbook{} }
func (m *Cookbook) String() string { return proto.CompactTextString(m) }
func (*Cookbook) ProtoMessage()    {}
func (*Cookbook) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f90db7200f6126e, []int{3}
}

func (m *Cookbook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cookbook.Unmarshal(m, b)
}
func (m *Cookbook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cookbook.Marshal(b, m, deterministic)
}
func (m *Cookbook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cookbook.Merge(m, src)
}
func (m *Cookbook) XXX_Size() int {
	return xxx_messageInfo_Cookbook.Size(m)
}
func (m *Cookbook) XXX_DiscardUnknown() {
	xxx_messageInfo_Cookbook.DiscardUnknown(m)
}

var xxx_messageInfo_Cookbook proto.InternalMessageInfo

func (m *Cookbook) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Cookbook) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type CookbookAllVersion struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	CurrentVersion       string   `protobuf:"bytes,2,opt,name=current_version,json=currentVersion,proto3" json:"current_version,omitempty" toml:"current_version,omitempty" mapstructure:"current_version,omitempty"`
	Versions             []string `protobuf:"bytes,3,rep,name=versions,proto3" json:"versions,omitempty" toml:"versions,omitempty" mapstructure:"versions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CookbookAllVersion) Reset()         { *m = CookbookAllVersion{} }
func (m *CookbookAllVersion) String() string { return proto.CompactTextString(m) }
func (*CookbookAllVersion) ProtoMessage()    {}
func (*CookbookAllVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f90db7200f6126e, []int{4}
}

func (m *CookbookAllVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CookbookAllVersion.Unmarshal(m, b)
}
func (m *CookbookAllVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CookbookAllVersion.Marshal(b, m, deterministic)
}
func (m *CookbookAllVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CookbookAllVersion.Merge(m, src)
}
func (m *CookbookAllVersion) XXX_Size() int {
	return xxx_messageInfo_CookbookAllVersion.Size(m)
}
func (m *CookbookAllVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_CookbookAllVersion.DiscardUnknown(m)
}

var xxx_messageInfo_CookbookAllVersion proto.InternalMessageInfo

func (m *CookbookAllVersion) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CookbookAllVersion) GetCurrentVersion() string {
	if m != nil {
		return m.CurrentVersion
	}
	return ""
}

func (m *CookbookAllVersion) GetVersions() []string {
	if m != nil {
		return m.Versions
	}
	return nil
}

func init() {
	proto.RegisterType((*Cookbooks)(nil), "chef.automate.domain.infra_proxy.response.Cookbooks")
	proto.RegisterType((*CookbooksAvailableVersions)(nil), "chef.automate.domain.infra_proxy.response.CookbooksAvailableVersions")
	proto.RegisterType((*CookbookVersion)(nil), "chef.automate.domain.infra_proxy.response.CookbookVersion")
	proto.RegisterType((*Cookbook)(nil), "chef.automate.domain.infra_proxy.response.Cookbook")
	proto.RegisterType((*CookbookAllVersion)(nil), "chef.automate.domain.infra_proxy.response.CookbookAllVersion")
}

func init() {
	proto.RegisterFile("api/interservice/infra_proxy/response/cookbooks.proto", fileDescriptor_3f90db7200f6126e)
}

var fileDescriptor_3f90db7200f6126e = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0x4d, 0x4b, 0xfb, 0x40,
	0x10, 0xc6, 0xe9, 0x3f, 0x7f, 0xb4, 0x19, 0xc1, 0xc2, 0x9e, 0x42, 0x4f, 0x21, 0x17, 0xe3, 0x65,
	0x17, 0x14, 0x41, 0x04, 0x5f, 0xaa, 0xdf, 0x20, 0x07, 0x11, 0x3d, 0x94, 0x4d, 0x9c, 0xda, 0xa5,
	0xc9, 0x4e, 0xd8, 0xdd, 0x04, 0xfb, 0xed, 0xc5, 0x98, 0x8d, 0x2f, 0xed, 0xa1, 0x7a, 0xdb, 0x99,
	0x9d, 0xe7, 0xf7, 0x0c, 0xc3, 0x03, 0x67, 0xb2, 0x56, 0x42, 0x69, 0x87, 0xc6, 0xa2, 0x69, 0x55,
	0x81, 0x42, 0xe9, 0x85, 0x91, 0xf3, 0xda, 0xd0, 0xeb, 0x5a, 0x18, 0xb4, 0x35, 0x69, 0x8b, 0xa2,
	0x20, 0x5a, 0xe5, 0x44, 0x2b, 0xcb, 0x6b, 0x43, 0x8e, 0xd8, 0x71, 0xb1, 0xc4, 0x05, 0x97, 0x8d,
	0xa3, 0x4a, 0x3a, 0xe4, 0xcf, 0x54, 0x49, 0xa5, 0xf9, 0x17, 0x29, 0xf7, 0xd2, 0x04, 0x21, 0xbc,
	0xf3, 0x6a, 0xf6, 0x00, 0xe1, 0x80, 0x8a, 0x46, 0x71, 0x90, 0x1e, 0x9c, 0x5c, 0xf0, 0x9d, 0x59,
	0xdc, 0x83, 0xee, 0xd1, 0x58, 0x45, 0x3a, 0xfb, 0x84, 0x25, 0x6b, 0x98, 0x0e, 0x36, 0xb3, 0x56,
	0xaa, 0x52, 0xe6, 0x25, 0xf6, 0x73, 0x96, 0x3d, 0x6d, 0xfa, 0x5e, 0xfe, 0xc1, 0x77, 0x56, 0x96,
	0x5b, 0xac, 0xaf, 0x61, 0xf2, 0x63, 0x31, 0xc6, 0xe0, 0xbf, 0x96, 0x15, 0x46, 0xa3, 0x78, 0x94,
	0x86, 0x59, 0xf7, 0x66, 0x11, 0xec, 0xb7, 0x1f, 0xdf, 0xd1, 0xbf, 0xae, 0xed, 0xcb, 0xe4, 0x1c,
	0xc6, 0x1e, 0xf0, 0x4b, 0x65, 0x05, 0x6c, 0x73, 0xb7, 0xad, 0x8c, 0x23, 0x98, 0x14, 0x8d, 0x31,
	0xa8, 0xdd, 0xfc, 0x3b, 0xeb, 0xb0, 0x6f, 0x7b, 0xf1, 0x14, 0xc6, 0xfd, 0x80, 0x8d, 0x82, 0x38,
	0x48, 0xc3, 0x6c, 0xa8, 0x6f, 0x6f, 0x1e, 0xaf, 0x5e, 0x94, 0x5b, 0x36, 0x39, 0x2f, 0xa8, 0x12,
	0xef, 0xf7, 0x13, 0xfe, 0x7e, 0x62, 0xa7, 0x20, 0xe5, 0x7b, 0x5d, 0x7e, 0x4e, 0xdf, 0x02, 0x00,
	0x00, 0xff, 0xff, 0xb8, 0x75, 0xa5, 0xad, 0x78, 0x02, 0x00, 0x00,
}
